
Important things to know:
1) Everyone works in their own branch

2) Everyone uses test-driven model (writing tests before you write your code for every method in the class) no matter how stupid in might seem or how trivial it might seem, you are still required to do so. 
   Go to https://developer.android.com/tools/testing/index.html for more info on android testing.

3) Only push to master branch after all the unit tests have passed successfully and you are satisfied with the results, otherwise push to your own branch.

4) Just because you are done your part, doesn't mean you are actually done. Your job now is to refactor your code. 
   "Advantages of refactoring is to improve code readability and reduced complexity thus improving source code maintaince, and create a more expressive internal architecture or object model to improve extensibility." (Wikipedia, the source of all my knowledge)
   Basically it means, work in small steps to remove any duplications in code, to remove complicated and hard to understand code by substituting it with simpler ones and to make it
   resuable for next project with little to no required changes. Rerun each unit test after each improvement in code to see if you haven't broken anything.

5) All source classes should have JAVADoc comments (see JavaDoc example provided on GitHub for format) as well as normal comments. 
   See http://www.oracle.com/technetwork/articles/java/index-137868.html for info on Javadoc.
   JavaDoc style comments will apply for other programming languages as well.

6) After all the above steps have been completed, push your final product to master branch. Now you are done and you can relax.